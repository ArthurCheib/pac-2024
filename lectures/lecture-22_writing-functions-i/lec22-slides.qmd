---
title: "<span style='color:#FFC61A'> Advanced Topics </span>"
title-slide-attributes: 
  data-background-image: images/background-harris.jpg
subtitle: "<span style='color:#FFFFFF'> Writing Functions in R (I) </span>"
format:
  revealjs:
    incremental: true
    footer: "<span style='color:#FFFFFF'> Policy Analytics Credential </span>"
    logo: images/harris_logo.png
    progress: true
    menu: true
    code-line-numbers: true
    embed-resources: true
editor: source
---

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

## Data we will be using to plot!
library(gapminder)
library(tidyverse)
library(ggthemes)
data(gapminder)
```

# [Today's agenda]{style="color:#FFC61A"}

# [Writing Functions]{style="color:#FFC61A"}

-   Crafting functions = tailoring personalized data solutions!
-   Write once, use multiple times (if well written)!
-   Streamlines data analysis workflows
-   Facilitates code sharing code among peers (reproducible research)

## Elements of a `function` {.scrollable}

::: {style="margin-top: 10px;"}
:::

::: fragment
- The four main elements of a function:
  - **Name:** how you refer to and call the function.
  - **Arguments:** the inputs the function requires to execute its task.
  - **Body:** the code block within the curly braces {} - what the function does
  - **Environment:** the context in which the function was defined and where it exists
:::

::: fragment
```{r}
#| code-line-numbers: "1|2,3|5,6|8,9,11"
#| echo: true
#| eval: false

# Creating a simple function to sum two numbers
# Name: add_numbers; Arguments: number1, number2
add_numbers <- function(number1, number2) {  
  
  # Body: performs the summation and stores it in 'result'
  result <- number1 + number2  
  
  # returns the sum - the output of the function
  return(result)  
}
# The environment: where the function is created and stored (current R session)

```
:::

## Writing our first `function` {.scrollable}

::: {style="margin-top: 10px;"}
:::

::: fragment
```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "1,2|3,4|5,6|7,8|9,10,11|13,14"

# Define a function to calculate the mean of a numeric vector
calculate_mean <- function(x) {
  # Check if 'x' is numeric
  if (is.numeric(x)) {
    # Calculate and return the mean
    return(mean(x))
  } else {
    # Return a message if 'x' is not numeric
    return("Input is not numeric")
  }
}

# Using our function for the first time
calculate_mean(c(0,100))
```
:::

::: {style="margin-top: 10px;"}
:::

::: fragment
```{r}
#| echo: false
#| eval: true

# Define a function to calculate the mean of a numeric vector
calculate_mean <- function(x) {
  # Check if 'x' is numeric
  if (is.numeric(x)) {
    # Calculate and return the mean
    return(mean(x))
  } else {
    # Return a message if 'x' is not numeric
    return("Input is not numeric")
  }
}

# Using our function for the first time
calculate_mean(c(0,100))
```
:::



## Writing our second `function` {.scrollable}

::: {style="margin-top: 10px;"}
:::

::: fragment
```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "1-3|5|7-9|11,12|14,15|17,18,19|21-24"

## Suppose we only have information about 2007
gapminder_2007 <- gapminder |> 
  filter(year == 2007)

## Define a function to calculate average life expectancy for a given country

# Name: average_life_expectancy;
# Argument: country_name
average_life_expectancy <- function(country_name) {  
  
  # Filter the gapminder data for the specified country
  country_data <- gapminder[gapminder$country == country_name, ]
  
  # Calculate the average life expectancy
  avg_life_exp <- mean(country_data$lifeExp)
  
  # Return the average life expectancy
  return(avg_life_exp)
}

## Using our function
average_life_expectancy('Brazil')
average_life_expectancy('United States')
average_life_expectancy('Chile')

```
:::

::: {style="margin-top: 10px;"}
:::

::: fragment
```{r}
#| echo: false
#| eval: true

## Suppose we only have information about 2007
gapminder_2007 <- gapminder |> 
  filter(year == 2007)

## Define a function to calculate average life expectancy for a given country

# Name: average_life_expectancy;
# Argument: country_name
average_life_expectancy <- function(country_name) {  
  
  # Filter the gapminder data for the specified country
  country_data <- gapminder[gapminder$country == country_name, ]
  
  # Calculate the average life expectancy
  avg_life_exp <- mean(country_data$lifeExp)
  
  # Return the average life expectancy
  return(avg_life_exp)
}

## Using our function
average_life_expectancy('Brazil')
average_life_expectancy('United States')
average_life_expectancy('Chile')

```
:::


# [Lecture recap]{style="color:#FFC61A"}

- 

# [Stay tuned!]{style="color:#FFC61A"} {background-image="images/background-harris.jpg"}
