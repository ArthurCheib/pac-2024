---
title: "<span style='color:#FFC61A'> Data Visualization - ggplot2 </span>"
title-slide-attributes: 
  data-background-image: images/background-harris.jpg
subtitle: "<span style='color:#FFFFFF'> Making graphs in R (II) </span>"
format:
  revealjs:
    incremental: true
    footer: "<span style='color:#FFFFFF'> Policy Analytics Credential </span>"
    logo: images/harris_logo.png
    progress: true
    menu: true
    embed-resources: true
editor: source
---

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

## Data we will be using to plot!
library(gapminder)
library(tidyverse)
library(ggthemes)
library(ggrepel)
library(flextable)
data(gapminder)

## First and second dataset
gapminder_brazil <- gapminder |> 
  filter(country == 'Brazil')

gapminder2 <- gapminder |> 
  filter(country %in% c('Brazil', 'Chile'))
```

# [Today's agenda]{style="color:#FFC61A"}

- More on `ggplot2`
- Faceting graphs using `ggplot2`
- Advanced plot customization

## Faceting: `facet_wrap` {.scrollable}

::: {style="margin-top: 10px;"}
:::

::: fragment
-   This is how we ended our first ggplot2 lesson!
:::

::: fragment
```{r}
#| code-line-numbers: "1|2|3|4|5,6,7,8,9|10|11|12"
#| echo: true
#| eval: false

## Final plot
gapminder_brazil |> 
  ggplot(aes(x = year, y = lifeExp)) +
  geom_point() +
  labs(title = 'Life expectancy evolution in Brazil',
       subtitle = 'From 1952 to 2007',
       x = 'Years',
       y = 'Life expectancy(age)',
       caption = 'Source: gapminder dataset') +
  theme_light() +
  scale_x_continuous(breaks = seq(1952, 2007, by = 5)) +
  geom_line()
```
:::

::: {style="margin-top: 10px;"}
:::

::: fragment
```{r}
#| echo: false
#| eval: true

## Final plot
our_plot <- gapminder_brazil |> 
  ggplot(aes(x = year, y = lifeExp)) +
  geom_point() +
  labs(title = 'Life expectancy evolution in Brazil',
       subtitle = 'From 1952 to 2007',
       x = 'Years',
       y = 'Life expectancy(age)',
       caption = 'Source: gapminder dataset') +
  theme_light() +
  scale_x_continuous(breaks = seq(1952, 2007, by = 5)) +
  geom_line()

our_plot
```
:::

## Faceting: `facet_wrap` {.scrollable}

::: {style="margin-top: 10px;"}
:::

::: fragment
- What if we need more than one country? (e.g.: Chile)
- Do we need to copy the whole, paste it and change the country's name only?
:::

::: fragment
```{r}
#| code-line-numbers: "1,2,3|4,5,6,7,8,9,10,11,12,13,14,15,16|17,18"
#| echo: true
#| eval: false

## Plotting the first layer of our plot
gapminder2 <- gapminder |> 
  filter(country %in% c('Brazil', 'Chile'))

## Plotting it!
gapminder2 |> 
  ggplot(aes(x = year, y = lifeExp)) +
  geom_point() +
  labs(title = 'Life expectancy evolution in Brazil & Chile',
       subtitle = 'From 1952 to 2007',
       x = 'Years',
       y = 'Life expectancy(age)',
       caption = 'Source: gapminder dataset') +
  theme_light() +
  scale_x_continuous(breaks = seq(1952, 2007, by = 5)) +
  geom_line() +
  ## We know in advance that our data contains the column named 'country'
  facet_wrap(~country)
```
:::

::: {style="margin-top: 10px;"}
:::

::: fragment
```{r}
#| echo: false
#| eval: true

## Plotting it!
gapminder2 |> 
  ggplot(aes(x = year, y = lifeExp)) +
  geom_point() +
  labs(title = 'Life expectancy evolution in Brazil',
       subtitle = 'From 1952 to 2007',
       x = 'Years',
       y = 'Life expectancy(age)',
       caption = 'Source: gapminder dataset') +
  theme_light() +
  scale_x_continuous(breaks = seq(1952, 2007, by = 5)) +
  geom_line() +
  facet_wrap(~country)
```
:::

## `gglpot2`: themes {.scrollable}

::: {style="margin-top: 10px;"}
:::

::: fragment
-   When using ggplot2, we can:
    -   Use predefined themes
    -   Make our own basic theme adjustments
    -   Add some elements on top of a theme that we liked
-   Before we dive in, let me show you this!
:::

::: fragment
```{r}
#| code-line-numbers: "1,2,3,4,5,6,7,8,9,10,11,12|1,2"
#| echo: true
#| eval: false

## We can create a ggplot object and keep building on top of it later on!
our_plot <- gapminder_brazil |> 
  ggplot(aes(x = year, y = lifeExp)) +
  geom_point() +
  labs(title = 'Life expectancy evolution in Brazil',
       subtitle = 'From 1952 to 2007',
       x = 'Years',
       y = 'Life expectancy(age)',
       caption = 'Source: gapminder dataset') +
  theme_light() +
  scale_x_continuous(breaks = seq(1952, 2007, by = 5)) +
  geom_line()
```
:::

## Using predefined themes {.scrollable}

::: {style="margin-top: 10px;"}
:::

::: fragment
-   `ggplot2` built-in themes
-   The `ggthemes` package
:::

::: fragment
```{r}
#| code-line-numbers: "1,2,3|4|5,6"
#| echo: true
#| eval: false

## Building on top of the ggplot variable we've created
# The `ggthemes` package contains a fair amount of different themes
# Nice way of quickly customizing our plot with one line of code
our_plot +
  # Using a theme from the `ggthemes` package
  theme_economist()
```
:::

::: {style="margin-top: 10px;"}
:::

::: fragment
```{r}
#| echo: false
#| eval: true

# Nice way of quickly customizing our plot with one line of code
our_plot +
  # Using a theme from the `ggthemes` package
  theme_economist()
```
:::

## Making small adjustments {.scrollable}

::: {style="margin-top: 10px;"}
:::

::: fragment
-   Some elements: element_text, element_line...
-   Customizing legend and background
:::

::: fragment
```{r}
#| code-line-numbers: "1,2|3,4|5,6|7,8,9,10,11|12,13,14|15,16|17,18|"
#| echo: true
#| eval: false

## Remember, we are building on top of the ggplot variable we've created
our_plot +
  ## Now, let's make some little improvements
  theme_light() +
  # Setting the position of the legend to be on the `top`
  theme(legend.position = "top",
        ## Adding a rectangular element in the background of the legend
        legend.background = element_rect(fill = "lightblue",
                                         colour = "darkblue",
                                         size = 1,
                                         linetype = "solid"),
        ## Adding a rectangular element in the plot and panel background
        plot.background = element_rect(fill = "lavender"),
        panel.background = element_rect(fill = "ivory"),
        ## Setting the size of the font in the text with element_text
        text = element_text(size = 12),
        ## Bolding the text of the title of the axis with element_text
        axis.title = element_text(face = "bold")) 
```
:::

::: {style="margin-top: 10px;"}
:::

::: fragment
```{r}
#| echo: false
#| eval: true

# Code
our_plot +
  ## Now, let's make some little improvements
  theme_light() +
  # Setting the legent position to be on the `top`
  theme(legend.position = "top",
        ## Adding a rectangular element in the background of the legend
        legend.background = element_rect(fill = "lightblue",
                                         colour = "darkblue",
                                         size = 1,
                                         linetype = "solid"),
        ## Adding a rectangular element in the plot and panel background
        plot.background = element_rect(fill = "lavender"),
        panel.background = element_rect(fill = "ivory"),
        ## Setting the size of the font in the text with element_text
        text = element_text(size = 12),
        ## Bolding the text of the title with element_text
        axis.title = element_text(face = "bold")) 
```
:::

## Interesting features! {.scrollable}

::: {style="margin-top: 10px;"}
:::

::: fragment
-   Highlighting some aspects of our graph!
:::

::: fragment
```{r}
#| code-line-numbers: "1,2|3,4|5,6|"
#| echo: true
#| eval: false

## Remember, we are building on top of the ggplot variable we've created
our_plot +
  ## Setting the color of the points to equal a condition (odd years)
  geom_point(aes(color = year %% 2 == 1)) +  
  ## Coloring the result of the condition of black or red
  scale_color_manual(values = c("FALSE" = "black", "TRUE" = "red"), guide = FALSE) +
  ## Adding a text label for the even years
  geom_text(aes(label = ifelse(year %% 2 == 0,
                               as.character(ceiling(lifeExp)),
                               "")), 
            hjust = 0.5, vjust = 2, color = "black", size = 4) 
```
:::

::: {style="margin-top: 10px;"}
:::

::: fragment
```{r}
#| echo: false
#| eval: true

## Remember, we are building on top of the ggplot variable we've created
our_plot +
  ## Setting the color of the points to equal a condition (odd years)
  geom_point(aes(color = as.integer(year) %% 2 == 1)) +  
  ## Coloring the result of the condition of black or red
  scale_color_manual(values = c("FALSE" = "black", "TRUE" = "red"), guide = FALSE) +
  ## Adding a text label for the even years
  geom_text(aes(label = ifelse(year %% 2 == 0,
                               as.character(ceiling(lifeExp)),
                               "")), 
            hjust = 0.5, vjust = 2, color = "black", size = 4) 
```
:::

# [Lecture recap]{style="color:#FFC61A"}

- Faceting graphs in `ggplot2`
    - `facet_wrap` function
- Graph customization
  - Ready to use themes
  - Changing colors, figures, text, etc.

# [Practice exercises!]{style="color:#FFC61A"} {background-image="images/background-harris.jpg"}
